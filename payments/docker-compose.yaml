services:
  postgres:
    image: postgres:14.18
    container_name: postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER_FILE: /run/secrets/postgres_user
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: event_tickets
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "$(cat /run/secrets/postgres_user)"]
      interval: 10s
      timeout: 5s
      retries: 10
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - .docker/sql.sql:/docker-entrypoint-initdb.d/sql.sql
    networks:
      - payments_network
    secrets:
      - postgres_password
      - postgres_user
  kafka:
    image: "confluentinc/cp-kafka:latest"
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      - KAFKA_NODE_ID=1
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@kafka:29093
      - KAFKA_LISTENERS=PLAINTEXT://kafka:29092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - CLUSTER_ID=MkU3OEVBNTcwNTJENDM2Qk
      - KAFKA_CREATE_TOPICS=PAYMENT_CREATED_TOPIC:1:1,PAYMENT_SUCCEEDED_TOPIC:1:1,TRANSACTION_CREATED_TOPIC:1:1,TRANSACTION_FAILED_TOPIC:1:1,TRANSACTION_SUCCEEDED_TOPIC:1:1
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "kafka-topics --bootstrap-server localhost:9092 --list || exit 1",
        ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 20s
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - payments_network

volumes:
  postgres_data:
  kafka_data:

networks:
  payments_network:

secrets:
  postgres_password:
    file: .docker/secrets/postgres_password.txt
  postgres_user:
    file: .docker/secrets/postgres_user.txt
